{
	"id": "842b5f87b57b9099303221fae5c07ab2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/LibERC1155LazyMint.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity <0.8.0 =0.7.6 >=0.4.24 >=0.6.0 >=0.6.2 >=0.6.9 ^0.7.0;\npragma abicoder v2;\n\nimport \"contracts/library/LibPart.sol\";\n\nlibrary LibERC1155LazyMint {\n    bytes4 public constant ERC1155_LAZY_ASSET_CLASS =\n        bytes4(keccak256(\"ERC1155_LAZY\"));\n    bytes4 constant _INTERFACE_ID_MINT_AND_TRANSFER = 0x6db15a0f;\n\n    struct Mint1155Data {\n        uint256 tokenId;\n        string tokenURI;\n        uint256 supply;\n        LibPart.Part[] creators;\n        LibPart.Part[] royalties;\n        bytes[] signatures;\n    }\n\n    bytes32 public constant MINT_AND_TRANSFER_TYPEHASH =\n        keccak256(\n            \"Mint1155(uint256 tokenId,uint256 supply,string tokenURI,Part[] creators,Part[] royalties)Part(address account,uint96 value)\"\n        );\n\n    function hash(Mint1155Data memory data) internal pure returns (bytes32) {\n        bytes32[] memory royaltiesBytes = new bytes32[](data.royalties.length);\n        for (uint256 i = 0; i < data.royalties.length; ++i) {\n            royaltiesBytes[i] = LibPart.hash(data.royalties[i]);\n        }\n        bytes32[] memory creatorsBytes = new bytes32[](data.creators.length);\n        for (uint256 i = 0; i < data.creators.length; ++i) {\n            creatorsBytes[i] = LibPart.hash(data.creators[i]);\n        }\n        return\n            keccak256(\n                abi.encode(\n                    MINT_AND_TRANSFER_TYPEHASH,\n                    data.tokenId,\n                    data.supply,\n                    keccak256(bytes(data.tokenURI)),\n                    keccak256(abi.encodePacked(creatorsBytes)),\n                    keccak256(abi.encodePacked(royaltiesBytes))\n                )\n            );\n    }\n}"
			},
			"contracts/library/LibPart.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity <0.8.0 =0.7.6 >=0.4.24 >=0.6.0 >=0.6.2 >=0.6.9 ^0.7.0;\npragma abicoder v2;\n\nlibrary LibPart {\n    bytes32 public constant TYPE_HASH =\n        keccak256(\"Part(address account,uint96 value)\");\n\n    struct Part {\n        address payable account;\n        uint96 value;\n    }\n\n    function hash(Part memory part) internal pure returns (bytes32) {\n        return keccak256(abi.encode(TYPE_HASH, part.account, part.value));\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/LibERC1155LazyMint.sol": {
				"LibERC1155LazyMint": {
					"abi": [
						{
							"inputs": [],
							"name": "ERC1155_LAZY_ASSET_CLASS",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINT_AND_TRANSFER_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/LibERC1155LazyMint.sol\":165:1695  library LibERC1155LazyMint {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/LibERC1155LazyMint.sol\":165:1695  library LibERC1155LazyMint {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7987105f\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x90c20c43\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/LibERC1155LazyMint.sol\":564:783  bytes32 public constant MINT_AND_TRANSFER_TYPEHASH =... */\n    tag_2:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LibERC1155LazyMint.sol\":198:289  bytes4 public constant ERC1155_LAZY_ASSET_CLASS =... */\n    tag_3:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/LibERC1155LazyMint.sol\":564:783  bytes32 public constant MINT_AND_TRANSFER_TYPEHASH =... */\n    tag_5:\n        /* \"contracts/LibERC1155LazyMint.sol\":625:783  keccak256(... */\n      0xfb988707ebb338694f318760b0fd5cfe756d00a2ade251fda110b80c336a3c7f\n        /* \"contracts/LibERC1155LazyMint.sol\":564:783  bytes32 public constant MINT_AND_TRANSFER_TYPEHASH =... */\n      dup2\n      jump\t// out\n        /* \"contracts/LibERC1155LazyMint.sol\":198:289  bytes4 public constant ERC1155_LAZY_ASSET_CLASS =... */\n    tag_9:\n        /* \"contracts/LibERC1155LazyMint.sol\":263:288  keccak256(\"ERC1155_LAZY\") */\n      0x1cdfaa400bc064c91b5cc20e571cfcc92103980be96e01fb36dda1962d8d78cb\n        /* \"contracts/LibERC1155LazyMint.sol\":198:289  bytes4 public constant ERC1155_LAZY_ASSET_CLASS =... */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_13:\n        /* \"#utility.yul\":102:126   */\n      tag_15\n        /* \"#utility.yul\":120:125   */\n      dup2\n        /* \"#utility.yul\":102:126   */\n      tag_16\n      jump\t// in\n    tag_15:\n        /* \"#utility.yul\":97:100   */\n      dup3\n        /* \"#utility.yul\":90:127   */\n      mstore\n        /* \"#utility.yul\":80:133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:262   */\n    tag_17:\n        /* \"#utility.yul\":232:255   */\n      tag_19\n        /* \"#utility.yul\":249:254   */\n      dup2\n        /* \"#utility.yul\":232:255   */\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"#utility.yul\":227:230   */\n      dup3\n        /* \"#utility.yul\":220:256   */\n      mstore\n        /* \"#utility.yul\":210:262   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":268:506   */\n    tag_7:\n      0x00\n        /* \"#utility.yul\":407:409   */\n      0x20\n        /* \"#utility.yul\":396:405   */\n      dup3\n        /* \"#utility.yul\":392:410   */\n      add\n        /* \"#utility.yul\":384:410   */\n      swap1\n      pop\n        /* \"#utility.yul\":420:499   */\n      tag_22\n        /* \"#utility.yul\":496:497   */\n      0x00\n        /* \"#utility.yul\":485:494   */\n      dup4\n        /* \"#utility.yul\":481:498   */\n      add\n        /* \"#utility.yul\":472:478   */\n      dup5\n        /* \"#utility.yul\":420:499   */\n      tag_13\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":374:506   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":512:746   */\n    tag_11:\n      0x00\n        /* \"#utility.yul\":649:651   */\n      0x20\n        /* \"#utility.yul\":638:647   */\n      dup3\n        /* \"#utility.yul\":634:652   */\n      add\n        /* \"#utility.yul\":626:652   */\n      swap1\n      pop\n        /* \"#utility.yul\":662:739   */\n      tag_24\n        /* \"#utility.yul\":736:737   */\n      0x00\n        /* \"#utility.yul\":725:734   */\n      dup4\n        /* \"#utility.yul\":721:738   */\n      add\n        /* \"#utility.yul\":712:718   */\n      dup5\n        /* \"#utility.yul\":662:739   */\n      tag_17\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":616:746   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":752:829   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":818:823   */\n      dup2\n        /* \"#utility.yul\":807:823   */\n      swap1\n      pop\n        /* \"#utility.yul\":797:829   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":835:984   */\n    tag_20:\n      0x00\n        /* \"#utility.yul\":911:977   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":904:909   */\n      dup3\n        /* \"#utility.yul\":900:978   */\n      and\n        /* \"#utility.yul\":889:978   */\n      swap1\n      pop\n        /* \"#utility.yul\":879:984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122076d346fb31b1a108a25fd9bce1d176541a9ce2c1f64169b4386e9a3b28d8fa9064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "610189610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80637987105f1461004557806390c20c4314610063575b600080fd5b61004d610081565b60405161005a91906100e7565b60405180910390f35b61006b6100a5565b6040516100789190610102565b60405180910390f35b7ffb988707ebb338694f318760b0fd5cfe756d00a2ade251fda110b80c336a3c7f81565b7f1cdfaa400bc064c91b5cc20e571cfcc92103980be96e01fb36dda1962d8d78cb81565b6100d28161011d565b82525050565b6100e181610127565b82525050565b60006020820190506100fc60008301846100c9565b92915050565b600060208201905061011760008301846100d8565b92915050565b6000819050919050565b60007fffffffff000000000000000000000000000000000000000000000000000000008216905091905056fea264697066735822122076d346fb31b1a108a25fd9bce1d176541a9ce2c1f64169b4386e9a3b28d8fa9064736f6c63430007060033",
							"opcodes": "PUSH2 0x189 PUSH2 0x26 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x19 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7987105F EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0x90C20C43 EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D PUSH2 0x81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B PUSH2 0xA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0xFB988707EBB338694F318760B0FD5CFE756D00A2ADE251FDA110B80C336A3C7F DUP2 JUMP JUMPDEST PUSH32 0x1CDFAA400BC064C91B5CC20E571CFCC92103980BE96E01FB36DDA1962D8D78CB DUP2 JUMP JUMPDEST PUSH2 0xD2 DUP2 PUSH2 0x11D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE1 DUP2 PUSH2 0x127 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x117 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xD346FB31B1A108A25FD9BCE1D176541A9CE2C1F64169B4 CODESIZE PUSH15 0x9A3B28D8FA9064736F6C6343000706 STOP CALLER ",
							"sourceMap": "165:1530:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:987:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "97:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "120:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "102:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "102:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "90:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "90:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "90:37:2"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "68:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "210:52:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "227:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "249:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "232:16:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "232:23:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "220:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "220:36:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "220:36:2"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "205:3:2",
														"type": ""
													}
												],
												"src": "139:123:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "374:132:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "384:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "396:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "407:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "392:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "392:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "384:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "472:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "485:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "496:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "481:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "481:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "420:51:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "420:79:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "420:79:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "346:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "358:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "369:4:2",
														"type": ""
													}
												],
												"src": "268:238:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "616:130:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "626:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "638:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "649:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "634:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "634:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "626:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "712:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "725:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "736:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "721:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "721:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "662:49:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "662:77:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "662:77:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "588:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "600:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "611:4:2",
														"type": ""
													}
												],
												"src": "512:234:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "797:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "807:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "818:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "807:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "779:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "789:7:2",
														"type": ""
													}
												],
												"src": "752:77:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "879:105:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "889:89:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "904:5:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "911:66:2",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "900:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "900:78:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "889:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "861:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "871:7:2",
														"type": ""
													}
												],
												"src": "835:149:2"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100405760003560e01c80637987105f1461004557806390c20c4314610063575b600080fd5b61004d610081565b60405161005a91906100e7565b60405180910390f35b61006b6100a5565b6040516100789190610102565b60405180910390f35b7ffb988707ebb338694f318760b0fd5cfe756d00a2ade251fda110b80c336a3c7f81565b7f1cdfaa400bc064c91b5cc20e571cfcc92103980be96e01fb36dda1962d8d78cb81565b6100d28161011d565b82525050565b6100e181610127565b82525050565b60006020820190506100fc60008301846100c9565b92915050565b600060208201905061011760008301846100d8565b92915050565b6000819050919050565b60007fffffffff000000000000000000000000000000000000000000000000000000008216905091905056fea264697066735822122076d346fb31b1a108a25fd9bce1d176541a9ce2c1f64169b4386e9a3b28d8fa9064736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x40 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7987105F EQ PUSH2 0x45 JUMPI DUP1 PUSH4 0x90C20C43 EQ PUSH2 0x63 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4D PUSH2 0x81 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A SWAP2 SWAP1 PUSH2 0xE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6B PUSH2 0xA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x78 SWAP2 SWAP1 PUSH2 0x102 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0xFB988707EBB338694F318760B0FD5CFE756D00A2ADE251FDA110B80C336A3C7F DUP2 JUMP JUMPDEST PUSH32 0x1CDFAA400BC064C91B5CC20E571CFCC92103980BE96E01FB36DDA1962D8D78CB DUP2 JUMP JUMPDEST PUSH2 0xD2 DUP2 PUSH2 0x11D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xE1 DUP2 PUSH2 0x127 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xFC PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x117 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xD8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH23 0xD346FB31B1A108A25FD9BCE1D176541A9CE2C1F64169B4 CODESIZE PUSH15 0x9A3B28D8FA9064736F6C6343000706 STOP CALLER ",
							"sourceMap": "165:1530:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;564:219;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;198:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;564:219;625:158;564:219;:::o;198:91::-;263:25;198:91;:::o;7:126:2:-;102:24;120:5;102:24;:::i;:::-;97:3;90:37;80:53;;:::o;139:123::-;232:23;249:5;232:23;:::i;:::-;227:3;220:36;210:52;;:::o;268:238::-;;407:2;396:9;392:18;384:26;;420:79;496:1;485:9;481:17;472:6;420:79;:::i;:::-;374:132;;;;:::o;512:234::-;;649:2;638:9;634:18;626:26;;662:77;736:1;725:9;721:17;712:6;662:77;:::i;:::-;616:130;;;;:::o;752:77::-;;818:5;807:16;;797:32;;;:::o;835:149::-;;911:66;904:5;900:78;889:89;;879:105;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "78600",
								"executionCost": "154",
								"totalCost": "78754"
							},
							"external": {
								"ERC1155_LAZY_ASSET_CLASS()": "319",
								"MINT_AND_TRANSFER_TYPEHASH()": "291"
							},
							"internal": {
								"hash(struct LibERC1155LazyMint.Mint1155Data memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 165,
									"end": 1695,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 165,
									"end": 1695,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122076d346fb31b1a108a25fd9bce1d176541a9ce2c1f64169b4386e9a3b28d8fa9064736f6c63430007060033",
									".code": [
										{
											"begin": 165,
											"end": 1695,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "7987105F"
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "90C20C43"
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 165,
											"end": 1695,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 625,
											"end": 783,
											"name": "PUSH",
											"source": 0,
											"value": "FB988707EBB338694F318760B0FD5CFE756D00A2ADE251FDA110B80C336A3C7F"
										},
										{
											"begin": 564,
											"end": 783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 564,
											"end": 783,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 263,
											"end": 288,
											"name": "PUSH",
											"source": 0,
											"value": "1CDFAA400BC064C91B5CC20E571CFCC92103980BE96E01FB36DDA1962D8D78CB"
										},
										{
											"begin": 198,
											"end": 289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 198,
											"end": 289,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 102,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 120,
											"end": 125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 102,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 102,
											"end": 126,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 102,
											"end": 126,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 102,
											"end": 126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 97,
											"end": 100,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 90,
											"end": 127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 80,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 80,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 80,
											"end": 133,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 262,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 139,
											"end": 262,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 232,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 249,
											"end": 254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 232,
											"end": 255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 232,
											"end": 255,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 232,
											"end": 255,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 232,
											"end": 255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 227,
											"end": 230,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 220,
											"end": 256,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 210,
											"end": 262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 210,
											"end": 262,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 210,
											"end": 262,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 268,
											"end": 506,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 268,
											"end": 506,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 268,
											"end": 506,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 407,
											"end": 409,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 396,
											"end": 405,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 392,
											"end": 410,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 384,
											"end": 410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 384,
											"end": 410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 420,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 496,
											"end": 497,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 481,
											"end": 498,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 472,
											"end": 478,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 420,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 420,
											"end": 499,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 420,
											"end": 499,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 420,
											"end": 499,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 374,
											"end": 506,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 374,
											"end": 506,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 374,
											"end": 506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 374,
											"end": 506,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 374,
											"end": 506,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 512,
											"end": 746,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 512,
											"end": 746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 512,
											"end": 746,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 649,
											"end": 651,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 647,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 634,
											"end": 652,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 626,
											"end": 652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 626,
											"end": 652,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 662,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 736,
											"end": 737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 725,
											"end": 734,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 721,
											"end": 738,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 712,
											"end": 718,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 662,
											"end": 739,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 662,
											"end": 739,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 662,
											"end": 739,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 662,
											"end": 739,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 616,
											"end": 746,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 616,
											"end": 746,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 616,
											"end": 746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 746,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 616,
											"end": 746,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 752,
											"end": 829,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 752,
											"end": 829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 752,
											"end": 829,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 823,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 807,
											"end": 823,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 807,
											"end": 823,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 797,
											"end": 829,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 797,
											"end": 829,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 797,
											"end": 829,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 797,
											"end": 829,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 835,
											"end": 984,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 835,
											"end": 984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 835,
											"end": 984,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 911,
											"end": 977,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 904,
											"end": 909,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 900,
											"end": 978,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 889,
											"end": 978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 889,
											"end": 978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 879,
											"end": 984,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 879,
											"end": 984,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 879,
											"end": 984,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 879,
											"end": 984,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"ERC1155_LAZY_ASSET_CLASS()": "90c20c43",
							"MINT_AND_TRANSFER_TYPEHASH()": "7987105f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ERC1155_LAZY_ASSET_CLASS\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINT_AND_TRANSFER_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/LibERC1155LazyMint.sol\":\"LibERC1155LazyMint\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/LibERC1155LazyMint.sol\":{\"keccak256\":\"0x144152f89f42b58e665ee5d10021adef356483bf414ed6e1273a5c7e1de523bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e7b6193e3b78a316483e37637d50e2dc999b52a25d46bd44c20b265ec566432\",\"dweb:/ipfs/QmX5zMJ2N3DKgTeFAKKTcTx9oC23JBts3YEiiDf4d8vrDS\"]},\"contracts/library/LibPart.sol\":{\"keccak256\":\"0xcb5f27f2bb23b9c0db70c41955579692eda509ccef6ae6619f225ee30bbf7b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd590ee1dbaa0d769b1fe8ca5a89199866a7cdb4927d82bd22e1dcc6e69701\",\"dweb:/ipfs/QmSgvKSeWSAq9fgNCuNtBbQooArz3wkYh1FCQ2k7FzLwyU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/library/LibPart.sol": {
				"LibPart": {
					"abi": [
						{
							"inputs": [],
							"name": "TYPE_HASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/library/LibPart.sol\":124:472  library LibPart {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/library/LibPart.sol\":124:472  library LibPart {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x64d4c819\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contracts/library/LibPart.sol\":146:237  bytes32 public constant TYPE_HASH =... */\n    tag_2:\n      tag_3\n      tag_4\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_4:\n        /* \"contracts/library/LibPart.sol\":190:237  keccak256(\"Part(address account,uint96 value)\") */\n      0x397e04204c1e1a60ee8724b71f8244e10ab5f2e9009854d80f602bda21b59ebb\n        /* \"contracts/library/LibPart.sol\":146:237  bytes32 public constant TYPE_HASH =... */\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_8:\n        /* \"#utility.yul\":102:126   */\n      tag_10\n        /* \"#utility.yul\":120:125   */\n      dup2\n        /* \"#utility.yul\":102:126   */\n      tag_11\n      jump\t// in\n    tag_10:\n        /* \"#utility.yul\":97:100   */\n      dup3\n        /* \"#utility.yul\":90:127   */\n      mstore\n        /* \"#utility.yul\":80:133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:377   */\n    tag_6:\n      0x00\n        /* \"#utility.yul\":278:280   */\n      0x20\n        /* \"#utility.yul\":267:276   */\n      dup3\n        /* \"#utility.yul\":263:281   */\n      add\n        /* \"#utility.yul\":255:281   */\n      swap1\n      pop\n        /* \"#utility.yul\":291:370   */\n      tag_13\n        /* \"#utility.yul\":367:368   */\n      0x00\n        /* \"#utility.yul\":356:365   */\n      dup4\n        /* \"#utility.yul\":352:369   */\n      add\n        /* \"#utility.yul\":343:349   */\n      dup5\n        /* \"#utility.yul\":291:370   */\n      tag_8\n      jump\t// in\n    tag_13:\n        /* \"#utility.yul\":245:377   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":383:460   */\n    tag_11:\n      0x00\n        /* \"#utility.yul\":449:454   */\n      dup2\n        /* \"#utility.yul\":438:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":428:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ba81e6067146e6e99461c4c724c650dedb4a0f1c7a13288dd60ae4db90b142f664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60dc610025600b82828239805160001a60731461001857fe5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806364d4c819146038575b600080fd5b603e6052565b604051604991906083565b60405180910390f35b7f397e04204c1e1a60ee8724b71f8244e10ab5f2e9009854d80f602bda21b59ebb81565b607d81609c565b82525050565b6000602082019050609660008301846076565b92915050565b600081905091905056fea2646970667358221220ba81e6067146e6e99461c4c724c650dedb4a0f1c7a13288dd60ae4db90b142f664736f6c63430007060033",
							"opcodes": "PUSH1 0xDC PUSH2 0x25 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x18 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64D4C819 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x49 SWAP2 SWAP1 PUSH1 0x83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x397E04204C1E1A60EE8724B71F8244E10AB5F2E9009854D80F602BDA21B59EBB DUP2 JUMP JUMPDEST PUSH1 0x7D DUP2 PUSH1 0x9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x96 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA DUP2 0xE6 MOD PUSH18 0x46E6E99461C4C724C650DEDB4A0F1C7A1328 DUP14 0xD6 EXP 0xE4 0xDB SWAP1 0xB1 TIMESTAMP 0xF6 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "124:348:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:463:2",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "80:53:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "97:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "120:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nodeType": "YulIdentifier",
																			"src": "102:17:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "102:24:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "90:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "90:37:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "90:37:2"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "68:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "75:3:2",
														"type": ""
													}
												],
												"src": "7:126:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "245:132:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "255:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "267:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "255:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "343:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "356:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "367:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "352:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "352:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "291:51:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "291:79:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "291:79:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "217:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "229:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "240:4:2",
														"type": ""
													}
												],
												"src": "139:238:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "428:32:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "438:16:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "449:5:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "438:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "410:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "420:7:2",
														"type": ""
													}
												],
												"src": "383:77:2"
											}
										]
									},
									"contents": "{\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361060335760003560e01c806364d4c819146038575b600080fd5b603e6052565b604051604991906083565b60405180910390f35b7f397e04204c1e1a60ee8724b71f8244e10ab5f2e9009854d80f602bda21b59ebb81565b607d81609c565b82525050565b6000602082019050609660008301846076565b92915050565b600081905091905056fea2646970667358221220ba81e6067146e6e99461c4c724c650dedb4a0f1c7a13288dd60ae4db90b142f664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH1 0x33 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x64D4C819 EQ PUSH1 0x38 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3E PUSH1 0x52 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x49 SWAP2 SWAP1 PUSH1 0x83 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH32 0x397E04204C1E1A60EE8724B71F8244E10AB5F2E9009854D80F602BDA21B59EBB DUP2 JUMP JUMPDEST PUSH1 0x7D DUP2 PUSH1 0x9C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x96 PUSH1 0x0 DUP4 ADD DUP5 PUSH1 0x76 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA DUP2 0xE6 MOD PUSH18 0x46E6E99461C4C724C650DEDB4A0F1C7A1328 DUP14 0xD6 EXP 0xE4 0xDB SWAP1 0xB1 TIMESTAMP 0xF6 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "124:348:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;146:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;190:47;146:91;:::o;7:126:2:-;102:24;120:5;102:24;:::i;:::-;97:3;90:37;80:53;;:::o;139:238::-;;278:2;267:9;263:18;255:26;;291:79;367:1;356:9;352:17;343:6;291:79;:::i;:::-;245:132;;;;:::o;383:77::-;;449:5;438:16;;428:32;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "44000",
								"executionCost": "121",
								"totalCost": "44121"
							},
							"external": {
								"TYPE_HASH()": "291"
							},
							"internal": {
								"hash(struct LibPart.Part memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 124,
									"end": 472,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 472,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 124,
									"end": 472,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 472,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 124,
									"end": 472,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 472,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "INVALID",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 472,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 472,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 124,
									"end": 472,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 124,
									"end": 472,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ba81e6067146e6e99461c4c724c650dedb4a0f1c7a13288dd60ae4db90b142f664736f6c63430007060033",
									".code": [
										{
											"begin": 124,
											"end": 472,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 124,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 124,
											"end": 472,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 472,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 124,
											"end": 472,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "64D4C819"
										},
										{
											"begin": 124,
											"end": 472,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 124,
											"end": 472,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 124,
											"end": 472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 472,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 124,
											"end": 472,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 190,
											"end": 237,
											"name": "PUSH",
											"source": 1,
											"value": "397E04204C1E1A60EE8724B71F8244E10AB5F2E9009854D80F602BDA21B59EBB"
										},
										{
											"begin": 146,
											"end": 237,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 146,
											"end": 237,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 102,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 120,
											"end": 125,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 102,
											"end": 126,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 102,
											"end": 126,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 102,
											"end": 126,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 102,
											"end": 126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 97,
											"end": 100,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 90,
											"end": 127,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 80,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 80,
											"end": 133,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 80,
											"end": 133,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 139,
											"end": 377,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 139,
											"end": 377,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 139,
											"end": 377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 278,
											"end": 280,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 267,
											"end": 276,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 263,
											"end": 281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 255,
											"end": 281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 255,
											"end": 281,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 291,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 367,
											"end": 368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 356,
											"end": 365,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 352,
											"end": 369,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 343,
											"end": 349,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 291,
											"end": 370,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 291,
											"end": 370,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 291,
											"end": 370,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 291,
											"end": 370,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 245,
											"end": 377,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 245,
											"end": 377,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 245,
											"end": 377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 245,
											"end": 377,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 245,
											"end": 377,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 383,
											"end": 460,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 383,
											"end": 460,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 383,
											"end": 460,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 454,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 438,
											"end": 454,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 438,
											"end": 454,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 428,
											"end": 460,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 428,
											"end": 460,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 428,
											"end": 460,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 428,
											"end": 460,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"TYPE_HASH()": "64d4c819"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"TYPE_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/library/LibPart.sol\":\"LibPart\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/library/LibPart.sol\":{\"keccak256\":\"0xcb5f27f2bb23b9c0db70c41955579692eda509ccef6ae6619f225ee30bbf7b9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bd590ee1dbaa0d769b1fe8ca5a89199866a7cdb4927d82bd22e1dcc6e69701\",\"dweb:/ipfs/QmSgvKSeWSAq9fgNCuNtBbQooArz3wkYh1FCQ2k7FzLwyU\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/LibERC1155LazyMint.sol": {
				"ast": {
					"absolutePath": "contracts/LibERC1155LazyMint.sol",
					"exportedSymbols": {
						"LibERC1155LazyMint": [
							152
						],
						"LibPart": [
							185
						]
					},
					"id": 153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"<",
								"0.8",
								".0",
								"=",
								"0.7",
								".6",
								">=",
								"0.4",
								".24",
								">=",
								"0.6",
								".0",
								">=",
								"0.6",
								".2",
								">=",
								"0.6",
								".9",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:70:0"
						},
						{
							"id": 2,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "103:19:0"
						},
						{
							"absolutePath": "contracts/library/LibPart.sol",
							"file": "contracts/library/LibPart.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 153,
							"sourceUnit": 186,
							"src": "124:39:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 152,
							"linearizedBaseContracts": [
								152
							],
							"name": "LibERC1155LazyMint",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "90c20c43",
									"id": 11,
									"mutability": "constant",
									"name": "ERC1155_LAZY_ASSET_CLASS",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "198:91:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 4,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "198:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"arguments": [
													{
														"hexValue": "455243313135355f4c415a59",
														"id": 8,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "273:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_1cdfaa400bc064c91b5cc20e571cfcc92103980be96e01fb36dda1962d8d78cb",
															"typeString": "literal_string \"ERC1155_LAZY\""
														},
														"value": "ERC1155_LAZY"
													}
												],
												"expression": {
													"argumentTypes": [
														{
															"typeIdentifier": "t_stringliteral_1cdfaa400bc064c91b5cc20e571cfcc92103980be96e01fb36dda1962d8d78cb",
															"typeString": "literal_string \"ERC1155_LAZY\""
														}
													],
													"id": 7,
													"name": "keccak256",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967288,
													"src": "263:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
														"typeString": "function (bytes memory) pure returns (bytes32)"
													}
												},
												"id": 9,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "functionCall",
												"lValueRequested": false,
												"names": [],
												"nodeType": "FunctionCall",
												"src": "263:25:0",
												"tryCall": false,
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											],
											"id": 6,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "256:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 5,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "256:6:0",
												"typeDescriptions": {}
											}
										},
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "256:33:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"mutability": "constant",
									"name": "_INTERFACE_ID_MINT_AND_TRANSFER",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "295:60:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 12,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "295:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783664623135613066",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "345:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1840339471_by_1",
											"typeString": "int_const 1840339471"
										},
										"value": "0x6db15a0f"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "LibERC1155LazyMint.Mint1155Data",
									"id": 30,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "392:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 15,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "392:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "tokenURI",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "417:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 17,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "417:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 20,
											"mutability": "mutable",
											"name": "supply",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "442:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 19,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "442:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 23,
											"mutability": "mutable",
											"name": "creators",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "466:23:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Part_$165_storage_$dyn_storage_ptr",
												"typeString": "struct LibPart.Part[]"
											},
											"typeName": {
												"baseType": {
													"id": 21,
													"name": "LibPart.Part",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 165,
													"src": "466:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Part_$165_storage_ptr",
														"typeString": "struct LibPart.Part"
													}
												},
												"id": 22,
												"nodeType": "ArrayTypeName",
												"src": "466:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Part_$165_storage_$dyn_storage_ptr",
													"typeString": "struct LibPart.Part[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 26,
											"mutability": "mutable",
											"name": "royalties",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "499:24:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Part_$165_storage_$dyn_storage_ptr",
												"typeString": "struct LibPart.Part[]"
											},
											"typeName": {
												"baseType": {
													"id": 24,
													"name": "LibPart.Part",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 165,
													"src": "499:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Part_$165_storage_ptr",
														"typeString": "struct LibPart.Part"
													}
												},
												"id": 25,
												"nodeType": "ArrayTypeName",
												"src": "499:14:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Part_$165_storage_$dyn_storage_ptr",
													"typeString": "struct LibPart.Part[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 29,
											"mutability": "mutable",
											"name": "signatures",
											"nodeType": "VariableDeclaration",
											"scope": 30,
											"src": "533:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
												"typeString": "bytes[]"
											},
											"typeName": {
												"baseType": {
													"id": 27,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "533:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"id": 28,
												"nodeType": "ArrayTypeName",
												"src": "533:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
													"typeString": "bytes[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Mint1155Data",
									"nodeType": "StructDefinition",
									"scope": 152,
									"src": "362:196:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "7987105f",
									"id": 35,
									"mutability": "constant",
									"name": "MINT_AND_TRANSFER_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 152,
									"src": "564:219:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 31,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "564:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d696e74313135352875696e7432353620746f6b656e49642c75696e7432353620737570706c792c737472696e6720746f6b656e5552492c506172745b5d2063726561746f72732c506172745b5d20726f79616c7469657329506172742861646472657373206163636f756e742c75696e7439362076616c756529",
												"id": 33,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "648:125:0",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_fb988707ebb338694f318760b0fd5cfe756d00a2ade251fda110b80c336a3c7f",
													"typeString": "literal_string \"Mint1155(uint256 tokenId,uint256 supply,string tokenURI,Part[] creators,Part[] royalties)Part(address account,uint96 value)\""
												},
												"value": "Mint1155(uint256 tokenId,uint256 supply,string tokenURI,Part[] creators,Part[] royalties)Part(address account,uint96 value)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_fb988707ebb338694f318760b0fd5cfe756d00a2ade251fda110b80c336a3c7f",
													"typeString": "literal_string \"Mint1155(uint256 tokenId,uint256 supply,string tokenURI,Part[] creators,Part[] royalties)Part(address account,uint96 value)\""
												}
											],
											"id": 32,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "625:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 34,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "625:158:0",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 150,
										"nodeType": "Block",
										"src": "862:831:0",
										"statements": [
											{
												"assignments": [
													46
												],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"mutability": "mutable",
														"name": "royaltiesBytes",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "872:31:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 44,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "872:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 45,
															"nodeType": "ArrayTypeName",
															"src": "872:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 54,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 50,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "920:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Mint1155Data_$30_memory_ptr",
																		"typeString": "struct LibERC1155LazyMint.Mint1155Data memory"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "royalties",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 26,
																"src": "920:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Part_$165_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct LibPart.Part memory[] memory"
																}
															},
															"id": 52,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "920:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "906:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 47,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "910:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 48,
															"nodeType": "ArrayTypeName",
															"src": "910:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "906:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "872:70:0"
											},
											{
												"body": {
													"id": 79,
													"nodeType": "Block",
													"src": "1004:76:0",
													"statements": [
														{
															"expression": {
																"id": 77,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 67,
																		"name": "royaltiesBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 46,
																		"src": "1018:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 69,
																	"indexExpression": {
																		"id": 68,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 56,
																		"src": "1033:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1018:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"expression": {
																					"id": 72,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 37,
																					"src": "1051:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Mint1155Data_$30_memory_ptr",
																						"typeString": "struct LibERC1155LazyMint.Mint1155Data memory"
																					}
																				},
																				"id": 73,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "royalties",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 26,
																				"src": "1051:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Part_$165_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct LibPart.Part memory[] memory"
																				}
																			},
																			"id": 75,
																			"indexExpression": {
																				"id": 74,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 56,
																				"src": "1066:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1051:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Part_$165_memory_ptr",
																				"typeString": "struct LibPart.Part memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Part_$165_memory_ptr",
																				"typeString": "struct LibPart.Part memory"
																			}
																		],
																		"expression": {
																			"id": 70,
																			"name": "LibPart",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "1038:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_LibPart_$185_$",
																				"typeString": "type(library LibPart)"
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "hash",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 184,
																		"src": "1038:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_Part_$165_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (struct LibPart.Part memory) pure returns (bytes32)"
																		}
																	},
																	"id": 76,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1038:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1018:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 78,
															"nodeType": "ExpressionStatement",
															"src": "1018:51:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 59,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "972:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 60,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "976:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Mint1155Data_$30_memory_ptr",
																	"typeString": "struct LibERC1155LazyMint.Mint1155Data memory"
																}
															},
															"id": 61,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "royalties",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 26,
															"src": "976:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Part_$165_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct LibPart.Part memory[] memory"
															}
														},
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "976:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "972:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 80,
												"initializationExpression": {
													"assignments": [
														56
													],
													"declarations": [
														{
															"constant": false,
															"id": 56,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 80,
															"src": "957:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 55,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "957:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 58,
													"initialValue": {
														"hexValue": "30",
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "969:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "957:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "999:3:0",
														"subExpression": {
															"id": 64,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "1001:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 66,
													"nodeType": "ExpressionStatement",
													"src": "999:3:0"
												},
												"nodeType": "ForStatement",
												"src": "952:128:0"
											},
											{
												"assignments": [
													85
												],
												"declarations": [
													{
														"constant": false,
														"id": 85,
														"mutability": "mutable",
														"name": "creatorsBytes",
														"nodeType": "VariableDeclaration",
														"scope": 150,
														"src": "1089:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
															"typeString": "bytes32[]"
														},
														"typeName": {
															"baseType": {
																"id": 83,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "1089:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 84,
															"nodeType": "ArrayTypeName",
															"src": "1089:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 93,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 89,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 37,
																	"src": "1136:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Mint1155Data_$30_memory_ptr",
																		"typeString": "struct LibERC1155LazyMint.Mint1155Data memory"
																	}
																},
																"id": 90,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "creators",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 23,
																"src": "1136:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Part_$165_memory_ptr_$dyn_memory_ptr",
																	"typeString": "struct LibPart.Part memory[] memory"
																}
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1136:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1122:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes32[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 86,
																"name": "bytes32",
																"nodeType": "ElementaryTypeName",
																"src": "1126:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 87,
															"nodeType": "ArrayTypeName",
															"src": "1126:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
																"typeString": "bytes32[]"
															}
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1122:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
														"typeString": "bytes32[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1089:68:0"
											},
											{
												"body": {
													"id": 118,
													"nodeType": "Block",
													"src": "1218:74:0",
													"statements": [
														{
															"expression": {
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 106,
																		"name": "creatorsBytes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 85,
																		"src": "1232:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																			"typeString": "bytes32[] memory"
																		}
																	},
																	"id": 108,
																	"indexExpression": {
																		"id": 107,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 95,
																		"src": "1246:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1232:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"expression": {
																					"id": 111,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 37,
																					"src": "1264:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Mint1155Data_$30_memory_ptr",
																						"typeString": "struct LibERC1155LazyMint.Mint1155Data memory"
																					}
																				},
																				"id": 112,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "creators",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 23,
																				"src": "1264:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_struct$_Part_$165_memory_ptr_$dyn_memory_ptr",
																					"typeString": "struct LibPart.Part memory[] memory"
																				}
																			},
																			"id": 114,
																			"indexExpression": {
																				"id": 113,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 95,
																				"src": "1278:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1264:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Part_$165_memory_ptr",
																				"typeString": "struct LibPart.Part memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Part_$165_memory_ptr",
																				"typeString": "struct LibPart.Part memory"
																			}
																		],
																		"expression": {
																			"id": 109,
																			"name": "LibPart",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 185,
																			"src": "1251:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_LibPart_$185_$",
																				"typeString": "type(library LibPart)"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "hash",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 184,
																		"src": "1251:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_struct$_Part_$165_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (struct LibPart.Part memory) pure returns (bytes32)"
																		}
																	},
																	"id": 115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1251:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "1232:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 117,
															"nodeType": "ExpressionStatement",
															"src": "1232:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 98,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 95,
														"src": "1187:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 99,
																"name": "data",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1191:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Mint1155Data_$30_memory_ptr",
																	"typeString": "struct LibERC1155LazyMint.Mint1155Data memory"
																}
															},
															"id": 100,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "creators",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 23,
															"src": "1191:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Part_$165_memory_ptr_$dyn_memory_ptr",
																"typeString": "struct LibPart.Part memory[] memory"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1191:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1187:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 119,
												"initializationExpression": {
													"assignments": [
														95
													],
													"declarations": [
														{
															"constant": false,
															"id": 95,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 119,
															"src": "1172:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 94,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1172:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 97,
													"initialValue": {
														"hexValue": "30",
														"id": 96,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1184:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1172:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "1213:3:0",
														"subExpression": {
															"id": 103,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 95,
															"src": "1215:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 105,
													"nodeType": "ExpressionStatement",
													"src": "1213:3:0"
												},
												"nodeType": "ForStatement",
												"src": "1167:125:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 123,
																	"name": "MINT_AND_TRANSFER_TYPEHASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "1379:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 124,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1427:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Mint1155Data_$30_memory_ptr",
																			"typeString": "struct LibERC1155LazyMint.Mint1155Data memory"
																		}
																	},
																	"id": 125,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenId",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 16,
																	"src": "1427:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 126,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 37,
																		"src": "1461:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Mint1155Data_$30_memory_ptr",
																			"typeString": "struct LibERC1155LazyMint.Mint1155Data memory"
																		}
																	},
																	"id": 127,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "supply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 20,
																	"src": "1461:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"expression": {
																						"id": 131,
																						"name": "data",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 37,
																						"src": "1510:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Mint1155Data_$30_memory_ptr",
																							"typeString": "struct LibERC1155LazyMint.Mint1155Data memory"
																						}
																					},
																					"id": 132,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "tokenURI",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 18,
																					"src": "1510:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 130,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1504:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																					"typeString": "type(bytes storage pointer)"
																				},
																				"typeName": {
																					"id": 129,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "1504:5:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1504:20:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 128,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "1494:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1494:31:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 138,
																					"name": "creatorsBytes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 85,
																					"src": "1574:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				],
																				"expression": {
																					"id": 136,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1557:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 137,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "1557:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1557:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 135,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "1547:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 140,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1547:42:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 144,
																					"name": "royaltiesBytes",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 46,
																					"src": "1638:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
																						"typeString": "bytes32[] memory"
																					}
																				],
																				"expression": {
																					"id": 142,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "1621:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 143,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encodePacked",
																				"nodeType": "MemberAccess",
																				"src": "1621:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1621:32:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 141,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967288,
																		"src": "1611:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 146,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1611:43:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 121,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1347:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "1347:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1347:325:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 120,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "1320:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1320:366:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 41,
												"id": 149,
												"nodeType": "Return",
												"src": "1301:385:0"
											}
										]
									},
									"id": 151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "804:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Mint1155Data_$30_memory_ptr",
													"typeString": "struct LibERC1155LazyMint.Mint1155Data"
												},
												"typeName": {
													"id": 36,
													"name": "Mint1155Data",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 30,
													"src": "804:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Mint1155Data_$30_storage_ptr",
														"typeString": "struct LibERC1155LazyMint.Mint1155Data"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "803:26:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "853:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 39,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "853:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "852:9:0"
									},
									"scope": 152,
									"src": "790:903:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 153,
							"src": "165:1530:0"
						}
					],
					"src": "32:1663:0"
				},
				"id": 0
			},
			"contracts/library/LibPart.sol": {
				"ast": {
					"absolutePath": "contracts/library/LibPart.sol",
					"exportedSymbols": {
						"LibPart": [
							185
						]
					},
					"id": 186,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 154,
							"literals": [
								"solidity",
								"<",
								"0.8",
								".0",
								"=",
								"0.7",
								".6",
								">=",
								"0.4",
								".24",
								">=",
								"0.6",
								".0",
								">=",
								"0.6",
								".2",
								">=",
								"0.6",
								".9",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:70:1"
						},
						{
							"id": 155,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "103:19:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 185,
							"linearizedBaseContracts": [
								185
							],
							"name": "LibPart",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "64d4c819",
									"id": 160,
									"mutability": "constant",
									"name": "TYPE_HASH",
									"nodeType": "VariableDeclaration",
									"scope": 185,
									"src": "146:91:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 156,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "146:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "506172742861646472657373206163636f756e742c75696e7439362076616c756529",
												"id": 158,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "200:36:1",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_397e04204c1e1a60ee8724b71f8244e10ab5f2e9009854d80f602bda21b59ebb",
													"typeString": "literal_string \"Part(address account,uint96 value)\""
												},
												"value": "Part(address account,uint96 value)"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_397e04204c1e1a60ee8724b71f8244e10ab5f2e9009854d80f602bda21b59ebb",
													"typeString": "literal_string \"Part(address account,uint96 value)\""
												}
											],
											"id": 157,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "190:9:1",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 159,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"names": [],
										"nodeType": "FunctionCall",
										"src": "190:47:1",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "LibPart.Part",
									"id": 165,
									"members": [
										{
											"constant": false,
											"id": 162,
											"mutability": "mutable",
											"name": "account",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "266:23:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "266:15:1",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 164,
											"mutability": "mutable",
											"name": "value",
											"nodeType": "VariableDeclaration",
											"scope": 165,
											"src": "299:12:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 163,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "299:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Part",
									"nodeType": "StructDefinition",
									"scope": 185,
									"src": "244:74:1",
									"visibility": "public"
								},
								{
									"body": {
										"id": 183,
										"nodeType": "Block",
										"src": "388:82:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 175,
																	"name": "TYPE_HASH",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 160,
																	"src": "426:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 176,
																		"name": "part",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "437:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Part_$165_memory_ptr",
																			"typeString": "struct LibPart.Part memory"
																		}
																	},
																	"id": 177,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "account",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 162,
																	"src": "437:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"expression": {
																		"id": 178,
																		"name": "part",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 167,
																		"src": "451:4:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Part_$165_memory_ptr",
																			"typeString": "struct LibPart.Part memory"
																		}
																	},
																	"id": 179,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 164,
																	"src": "451:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																],
																"expression": {
																	"id": 173,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "415:3:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encode",
																"nodeType": "MemberAccess",
																"src": "415:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "415:47:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 172,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "405:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "405:58:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 171,
												"id": 182,
												"nodeType": "Return",
												"src": "398:65:1"
											}
										]
									},
									"id": 184,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "part",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "338:16:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Part_$165_memory_ptr",
													"typeString": "struct LibPart.Part"
												},
												"typeName": {
													"id": 166,
													"name": "Part",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 165,
													"src": "338:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Part_$165_storage_ptr",
														"typeString": "struct LibPart.Part"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "337:18:1"
									},
									"returnParameters": {
										"id": 171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 184,
												"src": "379:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 169,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "379:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "378:9:1"
									},
									"scope": 185,
									"src": "324:146:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 186,
							"src": "124:348:1"
						}
					],
					"src": "32:441:1"
				},
				"id": 1
			}
		}
	}
}