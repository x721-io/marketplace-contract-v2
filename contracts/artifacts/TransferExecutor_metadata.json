{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "uint256",
						"name": "assetType",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "proxy",
						"type": "address"
					}
				],
				"name": "ProxyChange",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "_owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "index",
						"type": "uint8"
					}
				],
				"name": "getTransferProxy",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "index",
						"type": "uint8"
					},
					{
						"internalType": "address",
						"name": "proxy",
						"type": "address"
					}
				],
				"name": "setTransferProxy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "root",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32[]",
						"name": "proof",
						"type": "bytes32[]"
					},
					{
						"components": [
							{
								"internalType": "enum LibOrder.OrderType",
								"name": "orderType",
								"type": "uint8"
							},
							{
								"internalType": "address",
								"name": "maker",
								"type": "address"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "assetType",
										"type": "uint8"
									},
									{
										"internalType": "address",
										"name": "contractAddress",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "value",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "id",
										"type": "uint256"
									}
								],
								"internalType": "struct LibAsset.Asset",
								"name": "makeAsset",
								"type": "tuple"
							},
							{
								"internalType": "address",
								"name": "taker",
								"type": "address"
							},
							{
								"components": [
									{
										"internalType": "uint8",
										"name": "assetType",
										"type": "uint8"
									},
									{
										"internalType": "address",
										"name": "contractAddress",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "value",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "id",
										"type": "uint256"
									}
								],
								"internalType": "struct LibAsset.Asset",
								"name": "takeAsset",
								"type": "tuple"
							},
							{
								"internalType": "uint256",
								"name": "salt",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "start",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "end",
								"type": "uint256"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "receiver",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									}
								],
								"internalType": "struct LibOrder.Fee",
								"name": "originFee",
								"type": "tuple"
							},
							{
								"components": [
									{
										"internalType": "address",
										"name": "receiver",
										"type": "address"
									},
									{
										"internalType": "uint256",
										"name": "amount",
										"type": "uint256"
									}
								],
								"internalType": "struct LibOrder.Fee",
								"name": "royaltyFee",
								"type": "tuple"
							},
							{
								"internalType": "bytes",
								"name": "sig",
								"type": "bytes"
							},
							{
								"internalType": "bytes32",
								"name": "root",
								"type": "bytes32"
							},
							{
								"internalType": "bytes32[]",
								"name": "proof",
								"type": "bytes32[]"
							},
							{
								"internalType": "uint16",
								"name": "index",
								"type": "uint16"
							}
						],
						"internalType": "struct LibOrder.Order",
						"name": "order",
						"type": "tuple"
					}
				],
				"name": "validateListing",
				"outputs": [
					{
						"internalType": "bool",
						"name": "isValid",
						"type": "bool"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/TransferExecutor.sol": "TransferExecutor"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/AddressUpgradeable.sol": {
			"keccak256": "0x9e8ebda6384f3a6baa6a233b778ee46516550908bbf55bc8a45e709240d4d2ef",
			"license": "MIT",
			"urls": [
				"bzz-raw://f11c8cfa69ee457a1c7fe4b30fba330f80fa9a774979d95270b9bc020b3632ca",
				"dweb:/ipfs/QmckYcPMSJU9GDA2sxMr39B3uQLT5wyqHRN1uzubfW6zRG"
			]
		},
		"contracts/ContextUpgradeable.sol": {
			"keccak256": "0xc4d9a6ef5626b464d3dc2ede69fa402cfd1eff902986e8146687c951db6afab5",
			"license": "MIT",
			"urls": [
				"bzz-raw://bac8cc3fcf10245712ea5ccb1730008ff0e8f9671cf27f57e78956da3a76f230",
				"dweb:/ipfs/QmcbRdV2tDMBLNc6TjEg6r2Q9dQ8JVyUCnmXbMGAxcs87C"
			]
		},
		"contracts/Hashes.sol": {
			"keccak256": "0xec937e5d8295c4b2ad9e093edad82b1072f2cf96a81c219f3fa7e4569965d2e4",
			"license": "MIT",
			"urls": [
				"bzz-raw://52f9dc5e1e94e262cd236050502fcc31bbb0ad45ffb21ac918d7feb930ca5730",
				"dweb:/ipfs/QmSL3LUe25NYN2bcF6U49HG3DUP7csprx294Fw2Qz33c4o"
			]
		},
		"contracts/Initializable.sol": {
			"keccak256": "0xe804238dc115701cf2371864637cc5ed3fe0496d92edc6992b573e74f77afe90",
			"license": "MIT",
			"urls": [
				"bzz-raw://cf30e2e85fbc89ef3d057444c98dbb2850756147bf0d960b16bdf50df8786c1d",
				"dweb:/ipfs/QmUdPCNPauEjQ9NEj9rUD1smLq5bZHay3YcVVkV3WtRBGt"
			]
		},
		"contracts/MerkleProof.sol": {
			"keccak256": "0x3c32c4587050a17288832b2a9310e1cf51abd2e731a7279af93b526a6f727781",
			"license": "MIT",
			"urls": [
				"bzz-raw://0e96694de73de2e9407676db4d336474f70ec60557e31e90236c4a77022e70e0",
				"dweb:/ipfs/QmTbBkTQ4rctBma81jcND4cSLmWddUoCAHd66d2LRNu1sb"
			]
		},
		"contracts/OwnableUpgradeable.sol": {
			"keccak256": "0xcbe494f8c6279736ea8f92e2a414fbe9979baaf4f5369e995c2d8355be3e4417",
			"license": "MIT",
			"urls": [
				"bzz-raw://573281b7792175f2038ab283510306378fb87ab4278771fa5c90b5b131e7c9b0",
				"dweb:/ipfs/QmYBXXwJXyWfYx4gHQ3oXaZWMRwUH3nPPQvBuinhBimEfQ"
			]
		},
		"contracts/SafeMathUpgradeable.sol": {
			"keccak256": "0x347bc383ab4458cc4c63cbafcad04a73fa20b8452b9d6e7b7de1f1f2a9ddf95e",
			"license": "MIT",
			"urls": [
				"bzz-raw://1481ef949ea2d22612f8f926277c29b8be74c3cc3a49ac75cf430968064dd024",
				"dweb:/ipfs/QmNaAgpzWbCu1NCyqdeFmT1SEqnk59y4w17FZW3DuLvLpN"
			]
		},
		"contracts/TransferExecutor.sol": {
			"keccak256": "0xc0679804de6938b87eb3404fc84b7313e95a72afa1358df069af19a065b36252",
			"license": "MIT",
			"urls": [
				"bzz-raw://3f31c003bdcb592ddf1c8a8cf37d1c7db72601a83d3ebdf0016cb9cfe68389be",
				"dweb:/ipfs/QmWh6E7fjpGtSQWrjqoJH2GPrWmqmRGhsV3AzKHL14xwyE"
			]
		},
		"contracts/interface/IERC1155Upgradeable.sol": {
			"keccak256": "0xf5f52b1de1287787173ad95ccb4d828da96ae57fd8e89cd7150e401ba91dd443",
			"license": "MIT",
			"urls": [
				"bzz-raw://a940f8dcf21b54b1dfd91bcbf07524bd24fd88201511ad23868955a9d8bbf198",
				"dweb:/ipfs/Qmb86XFrjU9vKyyNXjLkeYyUwtb2GoEJGPnwo3tjHgn5Vv"
			]
		},
		"contracts/interface/IERC165Upgradeable.sol": {
			"keccak256": "0xafa7081e4a8d4a7e74358be6c0a2159faea4407a18159e6e2412e81955be5a57",
			"license": "MIT",
			"urls": [
				"bzz-raw://a748d0bece433aa910c713134d40c5bb393656514caade320199505f71ae3f1c",
				"dweb:/ipfs/QmUqLuXQphSEzaiismaoVmcWCCEURqUPKVahXCEYLjQbjR"
			]
		},
		"contracts/interface/IERC20TransferProxy.sol": {
			"keccak256": "0xa9c5cf639254504883c1c67037daf2ee0c5b7bf132d9528f6d70073a61ee720b",
			"license": "MIT",
			"urls": [
				"bzz-raw://98c4261c21d435bf7fb124c32f3a34e2b8d7c880a699a02ecd216aaf685a6835",
				"dweb:/ipfs/QmQzUeQFrGrfXdhZLVqGzpgydfeo5FCXMpocRHgoF7Hh4D"
			]
		},
		"contracts/interface/IERC20Upgradeable.sol": {
			"keccak256": "0xbf43ea17d029abc52528d97cb2b6c7e404369cc9c4276801c2bcbd634fac6479",
			"license": "MIT",
			"urls": [
				"bzz-raw://26aee18e3ef9c99956b648cd7aae30359430ae5e014f9b715db76fd504e39a28",
				"dweb:/ipfs/Qma1wSGw4mU5qCjqn3qAUWYiygf5WdXhKs7xPFdmnnmaJJ"
			]
		},
		"contracts/interface/IERC721Upgradeable.sol": {
			"keccak256": "0xb7d66e3745df0ebe9dcd9eb5f5642dd0202b836967affb0b7277f09beeb47e0a",
			"license": "MIT",
			"urls": [
				"bzz-raw://48312e28a5da20f6028958fd161eb240b11486f227bfb5347981ffa55a186775",
				"dweb:/ipfs/QmZZFUpL4iSmBP3z5RdCevJkukQPXMBoRnCzRN4GKBgdkR"
			]
		},
		"contracts/interface/INftTransferProxy.sol": {
			"keccak256": "0x1b399c4d1a81bfb68180920f2610194c7ec701f4ea34d012d4dee2c0454ad5ab",
			"license": "MIT",
			"urls": [
				"bzz-raw://37b671ae844d8e00a5ed807666c1beda5a21970575e925901288e8cfeb30bcbf",
				"dweb:/ipfs/QmY21B8BWtDekLRLEtSFTgYQHFKDNNcyeiZgcbTtwNVRfn"
			]
		},
		"contracts/interface/ITransferExecutor.sol": {
			"keccak256": "0xa6c2551eb4a002744ae13ce11c9515bb05b59f256556b96a82b3b94ac5b1415e",
			"license": "MIT",
			"urls": [
				"bzz-raw://ebac429f0f3c503e4f5598f1072fa02a30c3ff4a63c555fee5dbf14a1807449c",
				"dweb:/ipfs/QmdmohkweQfpfmvZFzmWNU2m89HyZDdd2mG7V6uVvfS37s"
			]
		},
		"contracts/interface/ITransferProxy.sol": {
			"keccak256": "0x4f459a295a290406256a0c188e8db364504b6deebcde90e32cd2dd6d768eedad",
			"license": "MIT",
			"urls": [
				"bzz-raw://092e3547ea9bbfbd91b84bbd6f0c6e173424aa5fc17be775b456e916b60baa08",
				"dweb:/ipfs/QmWVsEjJzytXAnPn36qCTYc3yWFTAVSxnpdpq3p9fjGctv"
			]
		},
		"contracts/library/LibAsset.sol": {
			"keccak256": "0xb2c9d90409b6dc28cd6acace407206fd6a87add96723e8b69540f27b7b56a06c",
			"license": "MIT",
			"urls": [
				"bzz-raw://fa73991461a9244db4e7e0aa85be44fb9251d9aca586bc267a5a3fa359ab9111",
				"dweb:/ipfs/QmNayJGhzy1Zgz4JVFv4EaY4Hry5PHqGDgf4QQ3yeGL6sL"
			]
		},
		"contracts/library/LibMath.sol": {
			"keccak256": "0x9529e1c0c3347d6a95285059dd606ff9d13babcbefd0235b43154504dc2e9d76",
			"license": "MIT",
			"urls": [
				"bzz-raw://ee85bdf17e3212c65626f1fb03ad9a2cb0c3ef734e87408ca4f4eee074ef57b2",
				"dweb:/ipfs/Qmdw7aY9XpAgWXYAUw2YCL3Kcz7w65hUWbC3FKqhVLhupv"
			]
		},
		"contracts/library/LibOrder.sol": {
			"keccak256": "0xff5fa7bd18230e3e394277e75640593b07a6ccefb05d795bede2a6d2e1291056",
			"license": "MIT",
			"urls": [
				"bzz-raw://0873c193b957e94c951a1520882f16ef6a6d59c89a8dc93bb886d5407827db4f",
				"dweb:/ipfs/QmcHkSje1qmCwjgB8BbpUwGaxFPcx83bSZu8ak2G4kagNj"
			]
		},
		"contracts/library/LibTransfer.sol": {
			"keccak256": "0xdcd872cbc821fb24bce3d4a4ae32a920e6c163619a4765a848fccc9b76aa025a",
			"license": "MIT",
			"urls": [
				"bzz-raw://40b438fc3ac01b7789b03a23da908eec4e3c0ff33d7f4178fb6eb8daf140bbdb",
				"dweb:/ipfs/QmRi3EkzMZcaeCaeigxMz67MXkZWoRB7UPELyFmbpQjHTs"
			]
		}
	},
	"version": 1
}