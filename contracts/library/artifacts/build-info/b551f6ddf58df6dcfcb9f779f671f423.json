{
	"id": "b551f6ddf58df6dcfcb9f779f671f423",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/library/LibTransfer.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity <0.8.0 =0.7.6 >=0.4.24 >=0.6.0 >=0.6.2 >=0.6.9 ^0.7.0;\npragma abicoder v2;\n\nlibrary LibTransfer {\n    function transferEth(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(\"\");\n        require(success, \"transfer failed\");\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/library/LibTransfer.sol": {
				"LibTransfer": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/library/LibTransfer.sol\":124:315  library LibTransfer {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/library/LibTransfer.sol\":124:315  library LibTransfer {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203d8aca369c453451781624b9681f3627f30b685fde2f6a61bee119cedfe1ab2764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d8aca369c453451781624b9681f3627f30b685fde2f6a61bee119cedfe1ab2764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE DUP11 0xCA CALLDATASIZE SWAP13 GASLIMIT CALLVALUE MLOAD PUSH25 0x1624B9681F3627F30B685FDE2F6A61BEE119CEDFE1AB276473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "124:191:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d8aca369c453451781624b9681f3627f30b685fde2f6a61bee119cedfe1ab2764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE DUP11 0xCA CALLDATASIZE SWAP13 GASLIMIT CALLVALUE MLOAD PUSH25 0x1624B9681F3627F30B685FDE2F6A61BEE119CEDFE1AB276473 PUSH16 0x6C634300070600330000000000000000 ",
							"sourceMap": "124:191:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"transferEth(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 124,
									"end": 315,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 315,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 124,
									"end": 315,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 124,
									"end": 315,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 315,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 124,
									"end": 315,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 315,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 124,
									"end": 315,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 124,
									"end": 315,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 124,
									"end": 315,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 124,
									"end": 315,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d8aca369c453451781624b9681f3627f30b685fde2f6a61bee119cedfe1ab2764736f6c63430007060033",
									".code": [
										{
											"begin": 124,
											"end": 315,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 124,
											"end": 315,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 124,
											"end": 315,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 124,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 124,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 124,
											"end": 315,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 124,
											"end": 315,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 124,
											"end": 315,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 124,
											"end": 315,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/library/LibTransfer.sol\":\"LibTransfer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/library/LibTransfer.sol\":{\"keccak256\":\"0xdcd872cbc821fb24bce3d4a4ae32a920e6c163619a4765a848fccc9b76aa025a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40b438fc3ac01b7789b03a23da908eec4e3c0ff33d7f4178fb6eb8daf140bbdb\",\"dweb:/ipfs/QmRi3EkzMZcaeCaeigxMz67MXkZWoRB7UPELyFmbpQjHTs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/library/LibTransfer.sol": {
				"ast": {
					"absolutePath": "contracts/library/LibTransfer.sol",
					"exportedSymbols": {
						"LibTransfer": [
							25
						]
					},
					"id": 26,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"<",
								"0.8",
								".0",
								"=",
								"0.7",
								".6",
								">=",
								"0.4",
								".24",
								">=",
								"0.6",
								".0",
								">=",
								"0.6",
								".2",
								">=",
								"0.6",
								".9",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:70:0"
						},
						{
							"id": 2,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "103:19:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 25,
							"linearizedBaseContracts": [
								25
							],
							"name": "LibTransfer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 23,
										"nodeType": "Block",
										"src": "207:106:0",
										"statements": [
											{
												"assignments": [
													10,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 10,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 23,
														"src": "218:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 9,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "218:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 17,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 15,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "258:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 11,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4,
																"src": "236:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 12,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "236:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 13,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 6,
																"src": "251:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "236:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "236:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "217:44:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 19,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 10,
															"src": "279:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "7472616e73666572206661696c6564",
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "288:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															},
															"value": "transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
																"typeString": "literal_string \"transfer failed\""
															}
														],
														"id": 18,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "271:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 21,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "271:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 22,
												"nodeType": "ExpressionStatement",
												"src": "271:35:0"
											}
										]
									},
									"id": 24,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferEth",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "171:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 6,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "183:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 5,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "170:27:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "207:0:0"
									},
									"scope": 25,
									"src": "150:163:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 26,
							"src": "124:191:0"
						}
					],
					"src": "32:284:0"
				},
				"id": 0
			}
		}
	}
}